name: RTGS .NET SDK Nuget Package

on:
  push
  #push:
  #  branches: [main]
  #pull_request:
  #  branches: [main]
  #release:
  #  types: [published]

jobs:
  build-test-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "5.0.x"
      - name: Dotnet Tool Manifest
        run: dotnet new tool-manifest
      - name: Install dotnet format
        run: dotnet tool install dotnet-format
      - name: Dotnet Format
        run: dotnet format ./src/RTGS.DotNetSDK/ --check
      - name: Build Dotnet
        run: dotnet build --configuration Release ./src/RTGS.DotNetSDK/
      - name: Test Dotnet
        run: |
          dotnet tool install dotnet-reportgenerator-globaltool --tool-path ./tools
          dotnet test --configuration Release ./src/RTGS.DotNetSDK/ --no-build --results-directory "./test_results" --logger "trx;LogFilePrefix=results;" --collect:"XPlat Code Coverage" -- RunConfiguration.DisableAppDomain=true
          ./tools/reportgenerator -reports:./test_results/**/coverage.cobertura.xml -targetdir:./test_results/CodeCoverage -reporttypes:Cobertura
      - uses: 5monkeys/cobertura-action@master
        with:
          path: test_results/CodeCoverage/Cobertura.xml
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          minimum_coverage: 70
          fail_below_threshold: true
          show_branch: true

  publish-to-devops-artifacts:
    #if: github.ref == 'refs/heads/main' && github.event_name == 'push'   
    needs: build-test-and-publish
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "5.0.x"
          source-url: https://pkgs.dev.azure.com/rtgs-global/RTGS-Global/_packaging/RTGS-Packages/nuget/v3/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.AZURE_ARTIFACTS_PAT }} 

      - name: dotnet build and publish
        run: |
          dotnet restore
          dotnet build --configuration Release ./src/RTGS.DotNetSDK/
          dotnet pack -c Release ./src/RTGS.DotNetSDK/RTGS.DotNetSDK.Publisher/RTGS.DotNetSDK.Publisher.csproj --version-suffix $GITHUB_RUN_ID

      - name: 'dotnet publish'
        run: dotnet nuget push --api-key AzureArtifacts bin/Release/*.nupkg 

  generate-docs:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: build-test-and-publish
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "5.0.x"
      - name: Setup DocFX
        uses: crazy-max/ghaction-chocolatey@v1
        with:
          args: install docfx
      - name: DocFX Build
        run: docfx docs/docfx.json
        continue-on-error: false
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: doc-site
          path: "docs/_site"
