name: RTGS .NET SDK Manual Publish

# this workflow can only be run manually and will build and publish a nuget package to the private AzureArtifacts feed
# Useful if you want to publish a package from a feature branch (specify the branch when you run the workflow)

on: workflow_dispatch

env:
  SOLUTION_FOLDER: ./src/RTGS.DotNetSDK/
  PUBLISHER_FOLDER: ./src/RTGS.DotNetSDK/RTGS.DotNetSDK.Publisher/
  SUBSCRIBER_FOLDER: ./src/RTGS.DotNetSDK/RTGS.DotNetSDK.Subscriber/
  AZURE_ARTIFACTS_URL: https://pkgs.dev.azure.com/rtgs-global/RTGS-Global/_packaging/RTGS-Packages/nuget/v3/index.json

jobs:
  publish-to-devops-artifacts:
    runs-on: ubuntu-latest
    steps:
      # require v1 here so that MinVer has access to history to determine version number to apply
      - uses: actions/checkout@v1
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1 sdfgsdfgsdfgsdfg
        with:
          source-url: ${{env.AZURE_ARTIFACTS_URL}}
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.AZURE_ARTIFACTS_PAT }}

      - name: dotnet build and publish
        run: |
          dotnet build --configuration Release $${{env.SOLUTION_FOLDER}}
          dotnet pack -c Release ${{env.PUBLISHER_FOLDER}}RTGS.DotNetSDK.Publisher.csproj
          dotnet pack -c Release ${{env.SUBSCRIBER_FOLDER}}RTGS.DotNetSDK.Subscriber.csproj

      - name: 'dotnet publish'
        run: |
          dotnet nuget push --api-key AzureArtifacts ${{env.PUBLISHER_FOLDER}}bin/Release/*.nupkg
          dotnet nuget push --api-key AzureArtifacts ${{env.SUBSCRIBER_FOLDER}}bin/Release/*.nupkg
